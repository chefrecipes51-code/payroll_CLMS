@using Microsoft.AspNetCore.Http
@using Payroll.Common.ApplicationConstant
@inject IHttpContextAccessor HttpContextAccessor

@{
    var currentYear = DateTime.UtcNow.Year.ToString();
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mantra Payroll Management System</title>
    <link rel="stylesheet" href="~/assets/plugins/bootstrap-5.3.3-dist/css/bootstrap.min.css">
    <link href="~/assets/src/css/datatables.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/assets/src/css/fonts.css">
    <link rel="stylesheet" href="~/assets/src/scss/style.css">

    <!-- jQuery should be loaded before Select2 -->
    <script type="text/javascript">
        function preventBack() {
            window.history.forward();
        }

        setTimeout("preventBack()", 0);

        window.onunload = function () { null };
    </script>
</head>
<body>
    <section class="page_wrapper_main">
       
        <div class="sidebar_wrapper">
            <ul class="navbar-nav nav in">
                <a class="navbar-brand sidebar-profile" title="This is a tooltip!">
                    <img src="~/assets/img/sidebar-log-icon.svg" width="32" height="32" alt="sidebar-logo" />
                </a>

                <li class="nav-item active">
                    <a href="#" class="nav-link" tooltip="dashboard" data-menuid="4"><span class="menu-sprite user-menu"></span></a>
                    @* Dynamic Menu Bind :- Start *@
                    @await Component.InvokeAsync("MenuPartial")
                    @* Dynamic Menu Bind :- End *@
                </li>
            </ul>          
            <div class="nav-bottom">
                <ul>
                    <li class="nav-item">
                        <a href="#" class="nav-link" id="masterDropdown" data-mdb-toggle="dropdown"
                           aria-expanded="false"><span class="menu-sprite menu-notification"></span></a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link"><span class="menu-sprite writing-pad"></span></a>
                    </li>
                </ul>
            </div>
        </div>
       
        <div class="header-wrapper">
            <nav class="navbar navbar-expand-md navbar-dark">
                <div class="d-flex align-items-center gap-3">
                    <a class="header-brand-logo" href="#">
                        <img src="~/assets/img/brand-logo.svg" height="28" width="104"
                             alt="brand-logo">
                    </a>
                    <div class="chip">
                        <p class="header-chip-text">Financial Year 2025-2026 (Q3)</p>
                    </div>
                </div>
                <div class="d-flex align-items-center gap-3">
                    @* <div class="search-box">
                        <button class="btn btn-search-absolute">
                            <span class="sprite-icons search-secondary"></span>
                        </button>
                        <input type="text" class="form-control" placeholder="search...">
                    </div> *@
                    <!-- <div>
                        <button class="btn btn_primary_light_icon" type="button" id="dropdownMenuButton1"
                            data-bs-toggle="dropdown" aria-expanded="false"><span
                                class="sprite-icons2 question-mark"></span></button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                            <li><a class="dropdown-item" href="#">Action</a></li>
                            <li><a class="dropdown-item" href="#">Another</a></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>
                        </ul>
                    </div> -->
                    <button class="btn btn_primary_light_icon">
                        <span class="sprite-icons notification-dark"></span>
                    </button>
                    <a class="navbar-brand sidebar-profile" type="button" data-bs-toggle="offcanvas"
                       data-bs-target="#headerProfile" aria-controls="headerProfile">
                        <img src="~/assets/img/icons/sidebar-profile.svg" width="32" height="32" alt="sidebar-logo">
                    </a>
                </div>
            </nav>
        </div>
        <div class="main-page">

            <div class="breadcrumb-container">
                @if (ViewBag.HideBreadcrumb != true)
                {
                    @await Component.InvokeAsync("BreadCrumbPartial")
                }
            </div>

            <div class="payroll-tabs-content-container">
                @RenderBody()
            </div>
        </div>
    </section>
    @* Offcanvas Region:- Start *@
    @await Component.InvokeAsync("HeaderOffcanvas")
    @* Offcanvas Region:- End *@



    @*  <script src="~/js/toastr.min.js"></script>
    <script src="~/application/js/layout.js"></script> *@

    <!-- Include Minified JS -->
    @*  <script src="js/site.min.js"></script> *@

    @* <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>  *@<!-- ensure this path is correct -->
    @* <script>
    //var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
    const connection = new signalR.HubConnectionBuilder().withUrl("/notificationhub").build();
    $(function () {
    connection.start().then(function () {
    // alert('Connected to dashboardHub');

    connection.send("SendNotiFicationCount").catch(err => console.error(err.toString()));

    }).catch(function (err) {
    return console.error(err.toString());
    });
    });
    // connection.on("receivenotification", function (notification) {
    //     // update the count and add the new notification
    //     console.log(notification);

    //     let count = parseint(document.getelementbyid("unread-count").innertext) + 1;
    //     document.getelementbyid("unread-count").innertext = count;

    //     // optionally, add the notification to the list
    //     const notificationlist = document.getelementbyid("notification-list");
    //     notificationlist.innerhtml = `<div style="background-color: lightyellow;">
    //                 <strong>${notification.notificationtitle}</strong>
    //                 <p>${notification.notificationdesc}</p>
    //             </div>` + notificationlist.innerhtml; // add to the top of the list
    // });
    function InvokeCount() {

    // Check if the connection is established

    }

    connection.on("ReceiveNotificationCount", function (Notifications) {
    SetNotification(Notifications);
    });
    function SetNotification(Notifications) {
    var count = Notifications.count;
    console.log(count);
    // document.getelementbyid("unread-count").innerHTML = count;
    $('#unread-count').text(count);
    $('#unread-count1').text(count + ' Notification');
    }
    //connection.start().catch(function (err) { return console.error(err.tostring()); });
    </script> *@

    @* Script Given By Designer :- Start *@
    <script src="~/assets/src/js/jquery.min.js"></script>
    <script src="~/assets/src/js/popper.min.js"></script>
    <script src="~/assets/plugins/bootstrap-5.3.3-dist/js/bootstrap.min.js"></script>
    <script src="~/assets/src/js/datatables.js"></script> 
    <script src="~/assets/src/custom-js/datatable.js"></script> 
    <script src="~/assets/src/custom-js/placeholder.js"></script>
    <script src="~/application/js/common/alerttoaster.js"></script>
    <script src="~/assets/src/js/select2.min.js"></script> <!-- Add Select2 JS -->
    @* <script src="~/assets/custom-js/customdropdown.js"></script> *@
    <script src="~/assets/src/custom-js/select2.js"></script>
    <script src="~/assets/src/custom-js/script.js"></script>
    <script>

        //chirag gurjar -> make session expired error handling code common at layout page.
        $(document).ajaxError(function (event, jqxhr, settings, thrownError) {
    // Check if it's an unauthorized error
    if (jqxhr.status === 401) {
                 showAlert("danger","Session expired. Redirecting to login...");
        setTimeout(() => {
            window.location.href = "/Account/LoginPage";
        }, 1500);
    }
    else if (jqxhr.status === 403) {
                showAlert("danger","You don't have permission to perform this action.");
    }
    else if (jqxhr.status === 500) {
        try {
            const response = JSON.parse(jqxhr.responseText);
                    showAlert("danger",response.message || "Internal Server Error.");
        } catch (e) {
                    showAlert("danger","Internal Server Error.");
        }
    }
    // Optionally handle 404 or other errors too
});



        function setMenuIdAndRedirect(menuId, redirectUrl) {
            $.ajax({
                url: '/Account/StoreMenuIdInSession',
                type: 'POST',
                data: { menuId: menuId },
                success: function () {
                    window.location.href = redirectUrl;
                },
                error: function () {
                    console.error("Failed to set menuId.");
                    window.location.href = redirectUrl; // Optional fallback
                }
            });
        }

    </script>
    @* <script src="~/application/js/user/user.js"></script> *@


    @* Script Given By Designer :- End *@

    @* Script Created By Rohit Tiwari:- Start *@
    <script>
        $(function () {
            const tabKeyPrefix = 'UniquePayrollTabId_';   // Prefix for tab keys based on paths
            const currentPath = window.location.pathname; // Current path
        });
    </script>
    <script src="~/application/js/common/tabrestrictedurls.js"></script>
    <script src="~/application/js/common/common.js"></script>
    <script src="~/js/toastr.min.js"></script>
    @* As discussion with Sir and Abheshek We will use when have used Dropdowon 
            Code Commented By Harshida 12-02-25     [START]
    *@
           @*  <script>
                const dropdownMenu = document.getElementById('dropdownMenu');

                // Handle dropdown item click
                dropdownMenu.addEventListener('click', (event) => {
                    if (event.target.classList.contains('dropdown-item')) {
                        // Remove 'active' class from all items
                        dropdownMenu.querySelectorAll('.dropdown-item').forEach((item) => {
                            item.classList.remove('active');
                        });
                        // Add 'active' class to the clicked item
                        event.target.classList.add('active');
                    }
                });
            </script> *@

    @* Code Commented By Harshida 12-02-25     [END] *@

    @* Script Created By Rohit Tiwari:- End *@

    @RenderSection("Scripts", required: false)
</body>
</html>